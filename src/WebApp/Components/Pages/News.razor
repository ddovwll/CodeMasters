@rendermode @(new InteractiveServerRenderMode(prerender: false))
@page "/News"
@using Core.Contracts
@using Core.Models
@inject INewsService NewsService
@implements IDisposable
@inject NavigationManager NavigationManager



<PageTitle>Контент Мастер Новости</PageTitle>


<div class="container">
    <h3>Новости</h3>
    

    <!-- Форма для поиска новостей -->
    <div class="search-container">
        <input type="text" @bind="searchTopic" placeholder="Введите тему для поиска..." class="form-control" />
        <button class="btn btn-primary" @onclick="LoadNews">Поиск новостей</button>
        <button class="btn btn-primary" @onclick="ToHome">Вернуться на главную</button>
    </div>

    <!-- Список новостей -->
    <div class="news-list">
        @if (isLoading)
        {
        <p>Загрузка нвостей @loadingDots</p>
        }
        else if (news == null || !news.Any())
        {
        <p>Нет новостей по заданной теме.</p>
        }
        else
        {
        @foreach (var item in news)
        {
        <div class="news-item">
            <h4>@item.Title</h4>
            <p><strong>Автор:</strong> @item.Author</p>
            <p>@item.Description</p>
            <p><small>@item.PublishedAt?.ToString("g")</small></p>
            <a href="@item.Url" target="_blank" class="btn btn-outline-secondary">Читать полностью</a>
        </div>
        }
        }
    </div>
</div>

@code {
    private List<ArticleModel> news;
    private string searchTopic = string.Empty;
    private bool isLoading = false;
    private string loadingDots = ".";
    Timer timer;

    /// <summary>
    /// Обработчик кнопки "Доомй"
    /// </summary>
    void ToHome()
    {
        NavigationManager.NavigateTo("/", forceLoad: true);
    }
    
    /// <summary>
    /// Инициализация таймера анимации загрузки
    /// </summary>
    protected override void OnInitialized()
    {
        // Инициализируем таймер с интервалом 500 мс
        timer = new Timer(UpdateLoadingDots, null, Timeout.Infinite, 250);
    }

    /// <summary>
    /// Загрузка новостей
    /// </summary>
    private async Task LoadNews()
    {
        isLoading = true;
        timer.Change(0, 250);
        news = await NewsService.GetNewsAsync(searchTopic);
        isLoading = false;
        timer.Change(Timeout.Infinite, Timeout.Infinite);
    }
    
    /// <summary>
    /// Анимация загрузки
    /// </summary>
    /// <param name="state"></param>
    private void UpdateLoadingDots(object state)
    {
        if (loadingDots.Length == 3)
        {
            loadingDots = ".";
        }
        else
        {
            loadingDots += ".";
        }

        InvokeAsync(StateHasChanged); // Перерисовываем компонент
    }

    /// <summary>
    /// Удаление таймера из памяти
    /// </summary>
    public void Dispose()
    {
        timer.Dispose();
    }
}

<style>
    /* Основные стили для страницы */
    body {
        background-color: #121212; /* Темный фон */
        color: #e0e0e0; /* Светлый текст */
        font-family: 'Poppins', sans-serif; /* Шрифт */
        margin: 0;
        padding: 20px; /* Общие отступы вокруг страницы */
    }

    /* Контейнер для новостей */
    .container {
        max-width: 800px; /* Максимальная ширина контейнера */
        margin: 0 auto; /* Центрирование контейнера */
        padding: 20px; /* Отступы внутри контейнера */
        background-color: #1e1e1e; /* Темный фон для контейнера */
        border-radius: 8px; /* Скругление углов */
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.5); /* Тень для контейнера */
    }

    /* Заголовок страницы */
    h3 {
        color: #ffc107; /* Желтый цвет для заголовка */
        margin-bottom: 20px; /* Отступ снизу */
    }
    


    /* Стили для контейнера поиска */
    .search-container {
        display: flex; /* Используем флекс для размещения элементов */
        justify-content: space-between; /* Распределение элементов по краям */
        margin-bottom: 20px; /* Отступ снизу */
        padding: 10px; /* Отступы внутри контейнера поиска */
        background-color: #1e1e1e; /* Темный фон для контейнера */
        border-radius: 8px; /* Скругление углов */
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3); /* Легкая тень */
        position: sticky; /* Закрепляем положение */
        top: 20px; /* Отступ от верхней части окна */
        z-index: 1000; /* Увеличиваем уровень наложения */
    }


    /* Стили для текстового поля поиска */
    .form-control {
        flex: 1; /* Поле занимает всю доступную ширину */
        padding: 10px; /* Отступы внутри поля */
        margin-right: 10px; /* Отступ справа */
        border: 1px solid #444; /* Темная рамка */
        border-radius: 5px; /* Скругление углов поля */
        background-color: #2a2a2a; /* Темный фон для поля */
        color: #e0e0e0; /* Светлый текст */
        transition: border-color 0.3s; /* Плавный переход */
    }

    /* Эффект при фокусе на поле поиска */
    .form-control:focus {
        border-color: #ffc107; /* Желтая рамка при фокусе */
        outline: none; /* Убираем стандартный обвод */
    }

    /* Стили для кнопок поиска */
    .btn-primary {
        padding: 10px 15px; /* Отступы внутри кнопок */
        border: none; /* Убираем рамку */
        border-radius: 5px; /* Скругление углов */
        background-color: #4caf50; /* Зеленый цвет фона */
        color: white; /* Цвет текста */
        cursor: pointer; /* Указатель при наведении */
        font-family: 'Poppins', sans-serif; /* Шрифт для кнопок */
        font-weight: 600; /* Жирный текст */
        transition: background-color 0.3s, transform 0.3s; /* Плавный переход */
    }

    /* Эффект при наведении на кнопки */
    .btn-primary:hover {
        background-color: #45a049; /* Темнее при наведении */
    }

    /* Стили для списка новостей */
    .news-list {
        margin-top: 20px; /* Отступ сверху */
    }

    /* Стили для отдельных элементов новостей */
    .news-item {
        background-color: #2a2a2a; /* Темный фон для элемента */
        border: 1px solid #444; /* Темная рамка */
        border-radius: 8px; /* Скругление углов */
        padding: 15px; /* Отступы внутри элемента */
        margin-bottom: 20px; /* Отступ между элементами */
        transition: background-color 0.3s; /* Плавный переход */
    }

    /* Эффект при наведении на элемент новости */
    .news-item:hover {
        background-color: #3a3a3a; /* Светлее при наведении */
    }

    /* Стили для заголовков новостей */
    .news-item h4 {
        color: #ffc107; /* Желтый цвет для заголовков новостей */
        margin-bottom: 5px; /* Отступ снизу */
    }

    /* Стили для ссылок */
    .news-item a {
        display: inline-block; /* Чтобы кнопка была на отдельной строке */
        margin-top: 10px; /* Отступ сверху */
        color: #ff8c00; /* Оранжевый цвет для ссылок */
        text-decoration: none; /* Убираем подчеркивание */
    }

    /* Эффект при наведении на ссылки */
    .news-item a:hover {
        text-decoration: underline; /* Подчеркивание при наведении */
    }


</style>